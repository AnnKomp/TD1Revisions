@page "/adding"
@using BlazorTD1Revisions.Models
@inject HttpClient Http
@inject IConfiguration Config
@inject NavigationManager Navigation

<PageTitle>Adding Product</PageTitle>

<h1>Add a New Product</h1>

@if (marques == null || typesProduits == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="nouveauProduit" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nomProduit">Nom du produit</label>
            <InputText id="nomProduit" class="form-control" @bind-Value="nouveauProduit.NomProduit" />
        </div>

        <div class="mb-3">
            <label for="description">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="nouveauProduit.Description" />
        </div>

        
        <div class="mb-3">
            <label for="description">Stock min</label>
            <InputNumber id="stockMin" class="form-control" @bind-Value="nouveauProduit.StockMin" />
        </div>

        <div class="mb-3">
            <label for="description">Stock max</label>
            <InputNumber id="stockMax" class="form-control" @bind-Value="nouveauProduit.StockMax" />
        </div>

        <div class="mb-3">
            <label for="description">Stock réel</label>
            <InputNumber id="stockReel" class="form-control" @bind-Value="nouveauProduit.StockReel" />
        </div>

        <div class="mb-3">
            <label for="marque">Marque</label>
            <InputSelect id="marque" class="form-control" @bind-Value="nouveauProduit.IdMarque">
                <option value="">-- Sélectionner une marque --</option>
                @foreach (var marque in marques)
                {
                    <option value="@marque.IdMarque">@marque.NomMarque</option>
                }
            </InputSelect>
        </div>

        <div class="mb-3">
            <label for="typeProduit">Type de produit</label>
            <InputSelect id="typeProduit" class="form-control" @bind-Value="nouveauProduit.IdTypeProduit">
                <option value="">-- Sélectionner un type de produit --</option>
                @foreach (var typeProduit in typesProduits)
                {
                    <option value="@typeProduit.IdTypeProduit">@typeProduit.NomTypeProduit</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Ajouter le produit</button>
    </EditForm>
}

@code {
    private Produit nouveauProduit = new Produit();
    private Marque[]? marques;
    private TypeProduit[]? typesProduits;
    private string? serviceEndpoint;

    protected override async Task OnInitializedAsync()
    {
        serviceEndpoint = $"{Config.GetValue<string>("BackendUrl")}/api";
        await ChargerMarquesEtTypesProduits();
    }

    private async Task ChargerMarquesEtTypesProduits()
    {
        marques = await Http.GetFromJsonAsync<Marque[]>($"{serviceEndpoint}/Marques");
        typesProduits = await Http.GetFromJsonAsync<TypeProduit[]>($"{serviceEndpoint}/TypeProduits");
    }

    private async Task HandleValidSubmit()
    {
        var requestUri = $"{serviceEndpoint}/Produits";
        var response = await Http.PostAsJsonAsync(requestUri, nouveauProduit);

        if (response.IsSuccessStatusCode)
        {
            // Redirection ou message de succès après l'ajout
            Navigation.NavigateTo("/products");
        }
        else
        {
            // Gérer les erreurs (par exemple, afficher un message d'erreur)
            Console.WriteLine("Erreur lors de l'ajout du produit");
        }
    }
}
